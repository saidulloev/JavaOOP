Классы и объекты
Java является объектно-ориентированным языком, поэтому такие понятия как "класс" и "объект" играют в нем ключевую роль.
Любую программу на Java можно представить как набор взаимодействующих между собой объектов.

Шаблоном или описанием объекта является класс, а объект представляет экземпляр этого класса.
Можно еще провести следующую аналогию. У нас у всех есть некоторое представление о человеке -
наличие двух рук, двух ног, головы, туловища и т.д. Есть некоторый шаблон - этот шаблон можно назвать классом.
Реально же существующий человек (фактически экземпляр данного класса) является объектом этого класса.

------------------------------------------------------------------------------------------------------------------------

Наследование
Одним из ключевых аспектов объектно-ориентированного программирования является наследование.
С помощью наследования можно расширить функционал уже имеющихся классов за счет добавления
нового функционала или изменения старого.

------------------------------------------------------------------------------------------------------------------------

Интерфейс

Механизм наследования очень удобен, но он имеет свои ограничения. В частности мы можем наследовать только от одного
класса, в отличие, например, от языка С++, где имеется множественное наследование.

В языке Java подобную проблему частично позволяют решить интерфейсы. Интерфейсы определяют некоторый функционал,
не имеющий конкретной реализации, который затем реализуют классы, применяющие эти интерфейсы. И один класс может
применить множество интерфейсов.

------------------------------------------------------------------------------------------------------------------------

Инкапсуляция

Инкапсуляция — это процесс сокрытия внутренних деталей реализации объекта и предоставления внешнему миру только
необходимых методов для взаимодействия с объектом. Это помогает упростить код, предотвращает нежелательное
изменение состояния объекта и улучшает безопасность.

------------------------------------------------------------------------------------------------------------------------

Полиморфизм

Полиморфизм - это возможность применения одноименных методов с одинаковыми или различными наборами параметров
в одном классе или в группе классов, связанных отношением наследования.

------------------------------------------------------------------------------------------------------------------------

Абстракция
Абстрактные классы

Абстрактный класс похож на обычный класс. В абстрактном классе также можно определить поля и методы,
но в то же время нельзя создать объект или экземпляр абстрактного класса. Абстрактные классы призваны
предоставлять базовый функционал для классов-наследников. А производные классы уже реализуют этот функционал.

------------------------------------------------------------------------------------------------------------------------





